"""added initial tables

Revision ID: 695760e04744
Revises: 
Create Date: 2024-09-22 23:29:43.757377

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '695760e04744'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('monthly_car',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('license_plate', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=False),
    sa.Column('priece', sa.Float(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parking_lot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('spots', sa.Integer(), nullable=True),
    sa.Column('start_priece', sa.Float(), nullable=True),
    sa.Column('extra_priece', sa.Float(), nullable=True),
    sa.Column('allowed_time', sa.Integer(), nullable=True),
    sa.Column('cashier', sa.Float(), nullable=True),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parking_lot_email'), 'parking_lot', ['email'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('updated_date', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=False)
    op.create_table('car',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parking_lot_id', sa.Integer(), nullable=False),
    sa.Column('license_plate', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=False),
    sa.Column('plan_type', sa.Enum('MONTHLY', 'LOOSE', name='plantypeenum'), nullable=True),
    sa.Column('entry_time', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('exit_time', sa.DateTime(), nullable=True),
    sa.Column('total_priece', sa.Float(), nullable=True),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('exit_by', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['parking_lot_id'], ['parking_lot.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parking_lot_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parking_lot_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('spots', sa.Integer(), nullable=True),
    sa.Column('start_priece', sa.Float(), nullable=True),
    sa.Column('extra_priece', sa.Float(), nullable=True),
    sa.Column('allowed_time', sa.Integer(), nullable=True),
    sa.Column('cashier', sa.Float(), nullable=True),
    sa.Column('created_date', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.ForeignKeyConstraint(['parking_lot_id'], ['parking_lot.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_parking_lot_history_email'), 'parking_lot_history', ['email'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_parking_lot_history_email'), table_name='parking_lot_history')
    op.drop_table('parking_lot_history')
    op.drop_table('car')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_parking_lot_email'), table_name='parking_lot')
    op.drop_table('parking_lot')
    op.drop_table('monthly_car')
    # ### end Alembic commands ###
